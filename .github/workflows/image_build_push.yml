# This is a basic workflow to help you get started with Actions

name: docker-image-push-admin

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    # Mukul:
    # I've added a local test branch on my system and using it for testing image push.
    # So, for testing purposes, need to checkout a branch "tags-artifact"
    # TODO: Need to change to build off master or main once it looks good.
    branches: [ tags-artifact ]


# Env variable
env:
  DOCKER_USER: ${{secrets.DOCKER_USER}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  fetch_run_id:
    runs-on: ubuntu-latest

    outputs:
      run_id: ${{ steps.get_run_id.outputs.run_id }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with: 
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
         python -m pip install --upgrade pip
         pip install requests

      - name: Run Python script
        id: run_script
        run: |
          echo "Fetching latest successful run ID from e-misison-server docker image workflow"
          python .github/fetch_runID.py
    
      - name: Get Run ID
        id: get_run_id
        run: echo "run_id=${{ steps.run_script.outputs.run_id }}" >> "$GITHUB_OUTPUT"

  # This workflow contains a single job called "build"
  build:
    needs: fetch_run_id

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      RUN_ID: ${{needs.fetch_run_id.outputs.run_id}}
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: docker login
      run: | # log into docker hub account
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

    - name: Get current date # get the date of the build
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d--%M-%S')"

    #Runs a single command using the runners shell
    - name: Run a one-line script
      run: echo running in repo ${GITHUB_REPOSITORY#*/} branch ${GITHUB_REF##*/} on ${{ steps.date.outputs.date }}

    # Runs a set of commands using the runners shell
    # - name: build docker image
    #   run: |
    #     docker build -t $DOCKER_USER/${GITHUB_REPOSITORY#*/}:${GITHUB_REF##*/}_${{ steps.date.outputs.date }} .
    #     docker images

    # - name: push docker image
    #   run: |
    #     docker push $DOCKER_USER/${GITHUB_REPOSITORY#*/}:${GITHUB_REF##*/}_${{ steps.date.outputs.date }}

    - name: Use Run ID from previous fetch_run_id job
      run: echo Run ID from previous job ${{ needs.fetch_run_id.outputs.run_id }}
      
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: docker-image-tag
        github-token: ${{ secrets.GH_PAT_TAG }}
        repository: MukuFlash03/e-mission-server
        run-id: ${{ env.RUN_ID }}

    - name: Print artifact tag
      run: cat tag_file.txt

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image-tag
        path: tag_file.txt
        overwrite: true

    - name: List artifact
      run: ls -R 
